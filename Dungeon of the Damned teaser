<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>The Dungeon of Forgotten Keys</title>

  <!-- Dungeon Fonts -->
  <link href="https://fonts.googleapis.com/css2?family=Rye&family=IM+Fell+English+SC&family=MedievalSharp&family=Almendra+SC&display=swap" rel="stylesheet" />

  <style>
    body {
      margin: 0;
      padding: 0;
      background: #0a0a0a url('https://www.transparenttextures.com/patterns/black-paper.png') repeat;
      color: #e0e0e0;
      font-family: 'IM Fell English SC', serif;
      min-height: 100vh;
      display: flex;
      flex-direction: column;
      align-items: center;
    }

    h1 {
  font-family: 'Rye', cursive;
  font-size: 2.5rem;
  margin: 20px 20px 20px 40px; /* a bit more left padding */
  text-align: center;  /* left align instead of center */
  color: #ff4f4f;
  text-shadow: 0 0 5px #ff0000;
}


    .container {
      width: 90%;
      max-width: 1000px;
      text-align: center;
      padding: 15px 20px;
      user-select: none;
    }

    .note, .wall-text {
      font-size: 1.2rem;
      line-height: 1.5;
      margin-bottom: 20px;
    }

    button {
      background: #1f1f1f;
      color: #eee;
      border: 1px solid #555;
      padding: 10px 20px;
      font-size: 1rem;
      margin: 10px 5px;
      cursor: pointer;
      border-radius: 5px;
      transition: background 0.3s;
      font-family: 'MedievalSharp', cursive;
      user-select: none;
    }
    button:hover {
      background: #3c3c3c;
    }

    #cardArea {
      position: relative;
      width: 100%;
      height: 600px;
      margin: 20px auto;
      background: rgba(0, 0, 0, 0.15);
      border: 1px dashed #444;
      overflow: hidden;
      border-radius: 10px;
      user-select: none;
    }

    .card {
      position: absolute;
      width: 120px;
      height: 160px;
      background: #1b1b1b;
      border: 2px solid #444;
      border-radius: 10px;
      font-size: 3rem;
      display: flex;
      align-items: center;
      justify-content: center;
      transition: background 0.3s;
      cursor: default;
      box-shadow: 0 0 15px rgba(0,0,0,0.5);
      font-family: 'Almendra SC', serif;
      user-select: none;
    }

    .card.revealed {
      background: #2a2a2a;
      font-size: 2.5rem;
      color: #aaa;
      cursor: default;
    }

    table {
      margin: 0 auto;
      border-collapse: collapse;
      font-family: 'Almendra SC', serif;
      color: #eee;
      user-select: none;
    }
    table, th, td {
      border: 1px solid #555;
      padding: 8px 12px;
    }
    th {
      background-color: #222;
      font-family: 'MedievalSharp', cursive;
      font-size: 1.1rem;
    }
    td {
      font-size: 1.5rem;
      text-align: center;
    }

    input[type="text"] {
      font-size: 1.5rem;
      padding: 6px 8px;
      width: 140px;
      text-align: center;
      font-family: 'Almendra SC', serif;
      border-radius: 5px;
      border: 1px solid #555;
      background: #1b1b1b;
      color: #eee;
      user-select: text;
    }

    #gateMessage {
      margin-top: 15px;
      font-family: 'IM Fell English SC', serif;
      font-size: 1.2rem;
      min-height: 1.5em;
      user-select: none;
    }

    #navigation {
      margin-top: 15px;
    }

  </style>

  <script>
    const symbols = [
      { icon: "‚ò†Ô∏è", name: "Skull", number: "1" },
      { icon: "üåπ", name: "Rose", number: "5" },
      { icon: "‚ö°", name: "Thunder", number: "2" },
      { icon: "üåô", name: "Moon", number: "6" },
      { icon: "üï∑Ô∏è", name: "Spider", number: "9" },
      { icon: "‚öñÔ∏è", name: "Scales", number: "7" },
      { icon: "üêç", name: "Serpent", number: "8" },
      { icon: "üî•", name: "Flame", number: "0" },
      { icon: "ü¶Å", name: "Lion", number: "4" },
      { icon: "ü¶â", name: "Owl", number: "3" }
    ];

    // Wall 1 cards fixed positions (to avoid overlap, scattered randomly but fixed seed)
    // Positions generated manually or you can keep them fixed here:
    const cardPositions = [
      { left: 20, top: 50, rotation: -10 },
      { left: 180, top: 30, rotation: 12 },
      { left: 350, top: 80, rotation: -8 },
      { left: 520, top: 60, rotation: 6 },
      { left: 700, top: 45, rotation: -15 },
      { left: 60, top: 320, rotation: 10 },
      { left: 230, top: 280, rotation: -12 },
      { left: 420, top: 340, rotation: 8 },
      { left: 590, top: 310, rotation: -7 },
      { left: 750, top: 290, rotation: 11 }
    ];

    let revealed = false;

    function enterRoom() {
      document.getElementById("intro").style.display = "none";
      document.getElementById("navigation").style.display = "block";
      showWall(1);
    }

    function revealCards() {
  const cardArea = document.getElementById("cardArea");
  cardArea.innerHTML = '';
  cardArea.style.display = "block";
  document.getElementById("revealBtn").style.display = "inline-block";

  const cardWidth = 120;
  const cardHeight = 160;

  // cardArea size (fixed height, width from CSS)
  const areaWidth = cardArea.clientWidth;
  const areaHeight = cardArea.clientHeight;

  // Max overlap allowed (percentage)
  const maxOverlap = 0.3; // 30% overlap

  // We'll generate random positions with some overlap allowed
  // Positions are stored to check overlap
  const positions = [];

  function isOverlapping(x, y) {
    for (const pos of positions) {
      const dx = Math.abs(pos.x - x);
      const dy = Math.abs(pos.y - y);

      // If distance in x or y less than cardWidth * (1 - maxOverlap), they overlap too much
      if (dx < cardWidth * (1 - maxOverlap) && dy < cardHeight * (1 - maxOverlap)) {
        return true;
      }
    }
    return false;
  }

  symbols.forEach(symbol => {
    let x, y;
    let attempts = 0;

    // Try to find a position that is not overlapping too much
    do {
      x = Math.floor(Math.random() * (areaWidth - cardWidth));
      y = Math.floor(Math.random() * (areaHeight - cardHeight));
      attempts++;
      if (attempts > 100) break; // break after too many tries to avoid infinite loop
    } while (isOverlapping(x, y));

    positions.push({x, y});

    const card = document.createElement("div");
    card.className = "card";
    card.dataset.symbol = symbol.icon;
    card.dataset.number = symbol.number;
    card.innerText = symbol.icon;

    card.style.left = x + "px";
    card.style.top = y + "px";

    // Random rotation between -20 to +20 degrees
    const rotation = Math.floor(Math.random() * 41) - 20;
    card.style.transform = `rotate(${rotation}deg)`;

    cardArea.appendChild(card);
  });

  revealed = false;
  document.getElementById("revealBtn").textContent = "Reveal Numbers";
}


    function toggleReveal() {
      revealed = !revealed;
      const cards = document.querySelectorAll(".card");
      cards.forEach(card => {
        card.classList.toggle("revealed");
        card.innerText = revealed ? card.dataset.number : card.dataset.symbol;
      });
      document.getElementById("revealBtn").textContent = revealed ? "Hide Numbers" : "Reveal Numbers";
    }

    function showWall(wallNumber) {
      document.querySelectorAll('.wall-section').forEach(section => {
        section.style.display = 'none';
      });
      document.getElementById('revealBtn').style.display = 'none';
      document.getElementById('cardArea').style.display = 'none';
      document.getElementById('gateMessage').textContent = '';
      document.getElementById('gateCode').value = '';

      const selectedWall = document.getElementById(`wall${wallNumber}`);
      if (selectedWall) {
        selectedWall.style.display = 'block';
        if (wallNumber === 1) {
          // Show look button and allow revealing cards
          document.getElementById('revealBtn').style.display = 'none';
          document.getElementById('lookBtn').style.display = 'inline-block';
          document.getElementById('cardArea').style.display = 'none';
        } else {
          document.getElementById('lookBtn').style.display = 'none';
        }
      }
    }

    function checkGateCode() {
      const input = document.getElementById('gateCode').value.trim();
      const correctCode = "51851"; 

      const messageEl = document.getElementById('gateMessage');

      if(input === correctCode) {
        messageEl.style.color = '#7fff7f';
        messageEl.textContent = "The gate creaks open slowly... You have unlocked the dungeon!";
      } else {
        messageEl.style.color = '#ff7f7f';
        messageEl.textContent = "Wrong code. The gate remains sealed.";
      }
    }
  </script>

</head>

<body>
  <h1>The Dungeon of Forgotten Keys</h1>

  <!-- Intro -->
  <div class="container" id="intro">
    <div class="note">
      You are inside a cold stone chamber with 4 towering walls. One wall has an old iron gate sealed shut. The other three whisper secrets. Clues are hidden all around. Only the right combination will grant you escape.
    </div>
    <button onclick="enterRoom()">Enter the Room</button>
  </div>

  <!-- Navigation -->
  <div id="navigation" class="container" style="display:none;">
    <button onclick="showWall(1)">Go to Wall 1</button>
    <button onclick="showWall(2)">Go to Wall 2</button>
    <button onclick="showWall(3)">Go to Wall 3</button>
    <button onclick="showWall(4)">Go to Gate Wall</button>
  </div>

 <!-- Wall 1: Cards scattered with partial overlap & random orientation -->
<div class="container wall-section" id="wall1" style="display:none;">
  <div class="wall-text">
    Something seems messed up below... strange cards lie scattered across the floor.
  </div>
  <button id="lookBtn" onclick="revealCards()">Look</button>
  <button id="revealBtn" style="display:none;" onclick="toggleReveal()">Reveal Numbers</button>
  <div id="cardArea"></div>
</div>


  <!-- Wall 2: Ridiculous mysterious riddle -->
  <div class="container wall-section" id="wall2" style="display:none;">
    <div class="wall-text" style="font-style: italic; font-size: 1.25rem; line-height: 1.4;">
      I hide in plain sight, yet few truly see,<br/>
      I'm what sets the honest and liars free.<br/>
      I'm not shaped by opinion or guess,<br/>
      But sought by all who wish to confess.<br/>
      You may fear me, twist me, or run from my call‚Äî<br/>
      But in the end, I outlast them all.<br/>
      <br/>
      <em>What am I?</em>
    </div>
  </div>

  <!-- Wall 3: Secret alphabet table -->
  <div class="container wall-section" id="wall3" style="display:none;">
    <div class="wall-text" style="margin-bottom: 10px; font-weight: bold;">Secret Language Alphabet Conversion Table:</div>
    <table>
      <thead>
        <tr>
          <th>Symbol</th>
          <th>English Letter</th>
        </tr>
      </thead>
      <tbody>
        <tr><td>üêç</td><td>A</td></tr>
        <tr><td>üî•</td><td>B</td></tr>
        <tr><td>ü¶â</td><td>C</td></tr>
        <tr><td>ü¶Å</td><td>D</td></tr>
        <tr><td>üåô</td><td>E</td></tr>
        <tr><td>üï∑Ô∏è</td><td>F</td></tr>
        <tr><td>‚öñÔ∏è</td><td>G</td></tr>
        <tr><td>‚ò†Ô∏è</td><td>H</td></tr>
        <tr><td>‚ö°</td><td>I</td></tr>
        <tr><td>üåπ</td><td>J</td></tr>
        <tr><td>üêç</td><td>K</td></tr>
        <tr><td>üî•</td><td>L</td></tr>
        <tr><td>ü¶â</td><td>M</td></tr>
        <tr><td>ü¶Å</td><td>N</td></tr>
        <tr><td>üåô</td><td>O</td></tr>
        <tr><td>üï∑Ô∏è</td><td>P</td></tr>
        <tr><td>‚öñÔ∏è</td><td>Q</td></tr>
        <tr><td>‚ò†Ô∏è</td><td>R</td></tr>
        <tr><td>‚ö°</td><td>S</td></tr>
        <tr><td>üåπ</td><td>T</td></tr>
        <tr><td>üêç</td><td>U</td></tr>
        <tr><td>üî•</td><td>V</td></tr>
        <tr><td>ü¶â</td><td>W</td></tr>
        <tr><td>ü¶Å</td><td>X</td></tr>
        <tr><td>üåô</td><td>Y</td></tr>
        <tr><td>üï∑Ô∏è</td><td>Z</td></tr>
      </tbody>
    </table>
    <div style="margin-top: 10px; font-style: italic;">
      Use this table to decode secret messages.
    </div>
  </div>

  <!-- Wall 4: Gate wall with code input -->
  <div class="container wall-section" id="wall4" style="display:none;">
    <div class="wall-text">The Gate Wall: A sealed iron gate stands before you.</div>
    <div style="margin-top: 20px;">
      <label for="gateCode" style="font-family: 'IM Fell English SC', serif; font-size: 1.2rem;">
        Enter the 5-digit code to unlock the gate:
      </label><br/>
      <input type="text" id="gateCode" maxlength="5" autocomplete="off" />
      <button onclick="checkGateCode()">Unlock Gate</button>
    </div>
    <div id="gateMessage"></div>
  </div>
  
</body>
</html>